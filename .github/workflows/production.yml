name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]

env:
  PROJECT_NAME: ${{ github.event.repository.name }}
  INTERNAL_PORT: 80
  EXTERNAL_PORT: 3000
  BRANCH: production
  VERSION: ${{ github.sha }}
  IMAGE_NAME: reyshazni/${{ github.event.repository.name }}-production:${{ github.sha }}

jobs:
  dockerize-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build --platform linux/amd64 -t ${{ env.IMAGE_NAME }} .

      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}

  deploy-to-server:
    runs-on: ubuntu-latest
    environment: production
    needs: dockerize-and-push
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            docker pull ${{ env.IMAGE_NAME }}
            docker stop ${{ env.PROJECT_NAME }} || true
            docker rm ${{ env.PROJECT_NAME }} || true
            docker run -d --name ${{ env.PROJECT_NAME }} -p ${{ env.EXTERNAL_PORT }}:${{ env.INTERNAL_PORT }} ${{ env.IMAGE_NAME }}
          EOF
